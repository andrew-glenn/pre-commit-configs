{
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLmNoZWNrb3Y": {
    "always_run": false,
    "description": "Runs checkov on Terraform templates.",
    "entry": "checkov -d .",
    "exclude": "\\.+.terraform\\/.*$",
    "files": "\\.tf$",
    "id": "checkov",
    "language": "python",
    "name": "Checkov",
    "pass_filenames": false,
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLmluZnJhY29zdF9icmVha2Rvd24": {
    "description": "Check terraform infrastructure cost",
    "entry": "infracost_breakdown.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "\\.(tf(vars)?|hcl)$",
    "id": "infracost_breakdown",
    "language": "script",
    "name": "Infracost breakdown",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZ3J1bnRfZm10": {
    "description": "Rewrites all Terragrunt configuration files to a canonical format.",
    "entry": "terragrunt_fmt.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.hcl)$",
    "id": "terragrunt_fmt",
    "language": "script",
    "name": "Terragrunt fmt",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform"
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZ3J1bnRfdmFsaWRhdGU": {
    "description": "Validates all Terragrunt configuration files.",
    "entry": "terragrunt_validate.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.hcl)$",
    "id": "terragrunt_validate",
    "language": "script",
    "name": "Terragrunt validate",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform"
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZm9ybV90ZmxpbnQ": {
    "description": "Validates all Terraform configuration files with TFLint.",
    "entry": "terraform_tflint.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.tf|\\.tfvars)$",
    "id": "terraform_tflint",
    "language": "script",
    "name": "Terraform validate with tflint",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZm9ybV90ZnNlYw": {
    "description": "Static analysis of Terraform templates to spot potential security issues.",
    "entry": "terraform_tfsec.sh",
    "id": "terraform_tfsec",
    "language": "script",
    "name": "Terraform validate with tfsec",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZm9ybV92YWxpZGF0ZQ": {
    "description": "Validates all Terraform configuration files.",
    "entry": "terraform_validate.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.tf|\\.tfvars)$",
    "id": "terraform_validate",
    "language": "script",
    "name": "Terraform validate",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZm9ybV9kb2Nz": {
    "description": "Inserts input and output documentation into README.md (using terraform-docs).",
    "entry": "terraform_docs.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.tf|\\.terraform\\.lock\\.hcl)$",
    "id": "terraform_docs",
    "language": "script",
    "name": "Terraform docs",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZm9ybV9kb2NzX3JlcGxhY2U": {
    "description": "Overwrite content of README.md with terraform-docs.",
    "entry": "terraform_docs_replace",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.tf)$",
    "id": "terraform_docs_replace",
    "language": "python",
    "name": "Terraform docs (overwrite README.md)",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZm9ybV9kb2NzX3dpdGhvdXRfYWdncmVnYXRlX3R5cGVfZGVmYXVsdHM": {
    "description": "Inserts input and output documentation into README.md (using terraform-docs). Identical to terraform_docs.",
    "entry": "terraform_docs.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.tf)$",
    "id": "terraform_docs_without_aggregate_type_defaults",
    "language": "script",
    "name": "Terraform docs (without aggregate type defaults)",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZm9ybV9mbXQ": {
    "description": "Rewrites all Terraform configuration files to a canonical format.",
    "entry": "terraform_fmt.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.tf|\\.tfvars)$",
    "id": "terraform_fmt",
    "language": "script",
    "name": "Terraform fmt",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform"
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhZm9ybV9wcm92aWRlcnNfbG9jaw": {
    "description": "Updates provider signatures in dependency lock files.",
    "entry": "terraform_providers_lock.sh",
    "exclude": "\\.terraform\\/.*$",
    "files": "(\\.terraform\\.lock\\.hcl)$",
    "id": "terraform_providers_lock",
    "language": "script",
    "name": "Lock terraform provider versions",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform",
    "require_serial": true
  },
  "YW50b25iYWJlbmtvL3ByZS1jb21taXQtdGVycmFmb3JtLnRlcnJhc2Nhbg": {
    "description": "Runs terrascan on Terraform templates.",
    "entry": "terrascan.sh",
    "id": "terrascan",
    "language": "script",
    "name": "terrascan",
    "repo": "https://github.com/antonbabenko/pre-commit-terraform"
  },
  "YXdzLXF1aWNrc3RhcnQvcXMtY2ZuLWxpbnQtcnVsZXMucXMtY2ZuLWxpbnQ": {
    "entry": "cfn-lint",
    "files": "\\.(json|yaml|yml)$",
    "id": "qs-cfn-lint",
    "language": "python",
    "name": "AWS Quick Start Linter",
    "repo": "https://github.com/aws-quickstart/qs-cfn-lint-rules"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLm1peGVkLWxpbmUtZW5kaW5n": {
    "description": "Replaces or checks mixed line ending",
    "entry": "mixed-line-ending",
    "id": "mixed-line-ending",
    "language": "python",
    "name": "Mixed line ending",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLm5hbWUtdGVzdHMtdGVzdA": {
    "description": "This verifies that test files are named correctly",
    "entry": "name-tests-test",
    "files": "(^|/)tests/.+\\.py$",
    "id": "name-tests-test",
    "language": "python",
    "name": "Tests should end in _test.py",
    "repo": "https://github.com/pre-commit/pre-commit-hooks"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLm5vLWNvbW1pdC10by1icmFuY2g": {
    "always_run": true,
    "entry": "no-commit-to-branch",
    "id": "no-commit-to-branch",
    "language": "python",
    "name": "Don't commit to branch",
    "pass_filenames": false,
    "repo": "https://github.com/pre-commit/pre-commit-hooks"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLW1lcmdlLWNvbmZsaWN0": {
    "description": "Check for files that contain merge conflict strings.",
    "entry": "check-merge-conflict",
    "id": "check-merge-conflict",
    "language": "python",
    "name": "Check for merge conflicts",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLWFkZGVkLWxhcmdlLWZpbGVz": {
    "description": "Prevent giant files from being committed",
    "entry": "check-added-large-files",
    "id": "check-added-large-files",
    "language": "python",
    "name": "Check for added large files",
    "repo": "https://github.com/pre-commit/pre-commit-hooks"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLWFzdA": {
    "description": "Simply check whether the files parse as valid python.",
    "entry": "check-ast",
    "id": "check-ast",
    "language": "python",
    "name": "Check python ast",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "python"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLWJ1aWx0aW4tbGl0ZXJhbHM": {
    "description": "Require literal syntax when initializing empty or zero Python builtin types.",
    "entry": "check-builtin-literals",
    "id": "check-builtin-literals",
    "language": "python",
    "name": "Check builtin type constructor use",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "python"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLWJ5dGUtb3JkZXItbWFya2Vy": {
    "description": "forbid files which have a UTF-8 byte-order marker",
    "entry": "check-byte-order-marker",
    "id": "check-byte-order-marker",
    "language": "python",
    "name": "check BOM - deprecated: use fix-byte-order-marker",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLWNhc2UtY29uZmxpY3Q": {
    "description": "Check for files that would conflict in case-insensitive filesystems",
    "entry": "check-case-conflict",
    "id": "check-case-conflict",
    "language": "python",
    "name": "Check for case conflicts",
    "repo": "https://github.com/pre-commit/pre-commit-hooks"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLWRvY3N0cmluZy1maXJzdA": {
    "description": "Checks a common error of defining a docstring after code.",
    "entry": "check-docstring-first",
    "id": "check-docstring-first",
    "language": "python",
    "name": "Check docstring is first",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "python"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLWV4ZWN1dGFibGVzLWhhdmUtc2hlYmFuZ3M": {
    "description": "Ensures that (non-binary) executables have a shebang.",
    "entry": "check-executables-have-shebangs",
    "id": "check-executables-have-shebangs",
    "language": "python",
    "name": "Check that executables have shebangs",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "stages": [
      "commit",
      "push",
      "manual"
    ],
    "types": [
      "text",
      "executable"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLWpzb24": {
    "description": "This hook checks json files for parseable syntax.",
    "entry": "check-json",
    "id": "check-json",
    "language": "python",
    "name": "Check JSON",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "json"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLXN5bWxpbmtz": {
    "description": "Checks for symlinks which do not point to anything.",
    "entry": "check-symlinks",
    "id": "check-symlinks",
    "language": "python",
    "name": "Check for broken symlinks",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "symlink"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLXNoZWJhbmctc2NyaXB0cy1hcmUtZXhlY3V0YWJsZQ": {
    "description": "Ensures that (non-binary) files with a shebang are executable.",
    "entry": "check-shebang-scripts-are-executable",
    "id": "check-shebang-scripts-are-executable",
    "language": "python",
    "name": "Check that scripts with shebangs are executable",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "stages": [
      "commit",
      "push",
      "manual"
    ],
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLXRvbWw": {
    "description": "This hook checks toml files for parseable syntax.",
    "entry": "check-toml",
    "id": "check-toml",
    "language": "python",
    "name": "Check Toml",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "toml"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLXZjcy1wZXJtYWxpbmtz": {
    "description": "Ensures that links to vcs websites are permalinks.",
    "entry": "check-vcs-permalinks",
    "id": "check-vcs-permalinks",
    "language": "python",
    "name": "Check vcs permalinks",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLXhtbA": {
    "description": "This hook checks xml files for parseable syntax.",
    "entry": "check-xml",
    "id": "check-xml",
    "language": "python",
    "name": "Check Xml",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "xml"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmNoZWNrLXlhbWw": {
    "description": "This hook checks yaml files for parseable syntax.",
    "entry": "check-yaml",
    "id": "check-yaml",
    "language": "python",
    "name": "Check Yaml",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "yaml"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmRlYnVnLXN0YXRlbWVudHM": {
    "description": "Check for debugger imports and py37+ `breakpoint()` calls in python source.",
    "entry": "debug-statement-hook",
    "id": "debug-statements",
    "language": "python",
    "name": "Debug Statements (Python)",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "python"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmRlc3Ryb3llZC1zeW1saW5rcw": {
    "description": "Detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.",
    "entry": "destroyed-symlinks",
    "id": "destroyed-symlinks",
    "language": "python",
    "name": "Detect Destroyed Symlinks",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "file"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmRldGVjdC1hd3MtY3JlZGVudGlhbHM": {
    "description": "Detects *your* aws credentials from the aws cli credentials file",
    "entry": "detect-aws-credentials",
    "id": "detect-aws-credentials",
    "language": "python",
    "name": "Detect AWS Credentials",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmRldGVjdC1wcml2YXRlLWtleQ": {
    "description": "Detects the presence of private keys",
    "entry": "detect-private-key",
    "id": "detect-private-key",
    "language": "python",
    "name": "Detect Private Key",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmRvdWJsZS1xdW90ZS1zdHJpbmctZml4ZXI": {
    "description": "This hook replaces double quoted strings with single quoted strings",
    "entry": "double-quote-string-fixer",
    "id": "double-quote-string-fixer",
    "language": "python",
    "name": "Fix double quoted strings",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "python"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmVuZC1vZi1maWxlLWZpeGVy": {
    "description": "Ensures that a file is either empty, or ends with one newline.",
    "entry": "end-of-file-fixer",
    "id": "end-of-file-fixer",
    "language": "python",
    "name": "Fix End of Files",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "stages": [
      "commit",
      "push",
      "manual"
    ],
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmZpbGUtY29udGVudHMtc29ydGVy": {
    "description": "Sort the lines in specified files (defaults to alphabetical). You must provide list of target files as input in your .pre-commit-config.yaml file.",
    "entry": "file-contents-sorter",
    "files": "^$",
    "id": "file-contents-sorter",
    "language": "python",
    "name": "File Contents Sorter",
    "repo": "https://github.com/pre-commit/pre-commit-hooks"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmZpeC1ieXRlLW9yZGVyLW1hcmtlcg": {
    "description": "removes UTF-8 byte order marker",
    "entry": "fix-byte-order-marker",
    "id": "fix-byte-order-marker",
    "language": "python",
    "name": "fix UTF-8 byte order marker",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "text"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmZpeC1lbmNvZGluZy1wcmFnbWE": {
    "description": "Add # -*- coding: utf-8 -*- to the top of python files",
    "entry": "fix-encoding-pragma",
    "id": "fix-encoding-pragma",
    "language": "python",
    "name": "Fix python encoding pragma",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "python"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLmZvcmJpZC1uZXctc3VibW9kdWxlcw": {
    "description": "Prevent addition of new git submodules",
    "entry": "forbid-new-submodules",
    "id": "forbid-new-submodules",
    "language": "python",
    "name": "Forbid new submodules",
    "repo": "https://github.com/pre-commit/pre-commit-hooks"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLnByZXR0eS1mb3JtYXQtanNvbg": {
    "description": "This hook sets a standard for formatting JSON files.",
    "entry": "pretty-format-json",
    "id": "pretty-format-json",
    "language": "python",
    "name": "Pretty format JSON",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "types": [
      "json"
    ]
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLnJlcXVpcmVtZW50cy10eHQtZml4ZXI": {
    "description": "Sorts entries in requirements.txt",
    "entry": "requirements-txt-fixer",
    "files": "requirements.*\\.txt$",
    "id": "requirements-txt-fixer",
    "language": "python",
    "name": "Fix requirements.txt",
    "repo": "https://github.com/pre-commit/pre-commit-hooks"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLnNvcnQtc2ltcGxlLXlhbWw": {
    "description": "Sorts simple YAML files which consist only of top-level keys, preserving comments and blocks.",
    "entry": "sort-simple-yaml",
    "files": "^$",
    "id": "sort-simple-yaml",
    "language": "python",
    "name": "Sort simple YAML files",
    "repo": "https://github.com/pre-commit/pre-commit-hooks"
  },
  "cHJlLWNvbW1pdC9wcmUtY29tbWl0LWhvb2tzLnRyYWlsaW5nLXdoaXRlc3BhY2U": {
    "description": "This hook trims trailing whitespace.",
    "entry": "trailing-whitespace-fixer",
    "id": "trailing-whitespace",
    "language": "python",
    "name": "Trim Trailing Whitespace",
    "repo": "https://github.com/pre-commit/pre-commit-hooks",
    "stages": [
      "commit",
      "push",
      "manual"
    ],
    "types": [
      "text"
    ]
  }
}